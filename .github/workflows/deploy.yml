name: Deploy to Production

# Trigger the workflow on push to main branch
on:
  push:
    branches: [ main ]
  
  # Allow manual triggering
  workflow_dispatch:

jobs:
  deploy:
    name: Deploy to VM
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup SSH
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ secrets.VM_SSH_PRIVATE_KEY }}
        
    - name: Add VM to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.VM_HOST }} >> ~/.ssh/known_hosts
        
    - name: Deploy to VM
      run: |
        ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} '
          # Navigate to the app directory and run update script
          cd /home/yassine/myapp || {
            echo "App directory not found. Please ensure the application is initially deployed."
            exit 1
          }
          
          # Make sure update script is executable
          chmod +x update.sh
          
          # Run the update script
          sudo ./update.sh
        '
        
    - name: Verify deployment
      run: |
        ssh ${{ secrets.VM_USER }}@${{ secrets.VM_HOST }} '
          # Check if containers are running
          if sudo docker compose -f /home/yassine/myapp/docker-compose.yml ps | grep -q "Up"; then
            echo "Deployment successful - containers are running"
          else
            echo "Deployment failed - containers are not running"
            exit 1
          fi
          
          # Check if application is responding
          sleep 10
          if curl -sf http://localhost:3000 > /dev/null; then
            echo "Application is responding"
          else
            echo "Application is not responding"
            exit 1
          fi
        '
        
    - name: Notify deployment status
      if: always()
      run: |
        if [ "${{ job.status }}" == "success" ]; then
          echo "Deployment completed successfully!"
        else
          echo "Deployment failed!"
        fi
